name: Build and Deploy

on:
  push:
    branches:
      - dev
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout código
      uses: actions/checkout@v3

    - name: Login en DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Construir imagen y pushear
      run: |
        IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/rsa-encryptor
        TAG=$(echo "${{ github.ref }}" | sed 's|refs/heads/||')
        DOCKERFILE=Dockerfile
        if [[ "$TAG" == "dev" ]]; then
          DOCKERFILE=Dockerfile.dev
        fi
        docker build -f $DOCKERFILE -t $IMAGE_NAME:$TAG .
        docker push $IMAGE_NAME:$TAG

  deploy-dev:
      needs: build-and-push
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/dev'

      steps:
      - name: Deploy dev en servidor Ionos vía SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/rsa-encryptor:dev
            docker stop rsa_dev || true && docker rm rsa_dev || true
            docker run -d --name rsa_dev --restart always -p 5001:5000 ${{ secrets.DOCKER_USERNAME }}/rsa-encryptor:dev
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Deploy a servidor Ionos vía SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/rsa-encryptor:master
          docker stop rsa_prod || true && docker rm rsa_prod || true
          docker run -d --name rsa_prod --restart always -p 80:5000 ${{ secrets.DOCKER_USERNAME }}/rsa-encryptor:master
    - name: Mostrar nombre de rama/tag
      run: |
        echo "Rama actual: ${{ github.ref }}"
        TAG=$(echo "${{ github.ref }}" | sed 's|refs/heads/||')
        echo "Usando TAG: $TAG"
